openapi: 3.0.0
info:
  title: Flightdeck API
  version: 1.0.0
  description: API for interacting with Flightdeck
  license:
    name: Apache-2.0
    url: https://opensource.org/license/apache-2-0
servers:
  - url: https://api.arctir.cloud/v1
  - url: /v1
paths:
  /clusters:
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
        - in: query
          name: name
          schema:
            type: string
          description: Search for a Cluster by name
      summary: Retrieve a list of Clusters
      operationId: getClusters
      responses:
        '200':
          description: A list of Clusters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersListResponse'
  /clusters/{clusterId}:
    get:
      parameters:
        - name: clusterId
          in: path
          required: true
          schema:
            type: string
      summary: Retrieve a Cluster
      operationId: getClusterById
      responses:
        '200':
          description: The Cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '404':
          description: The resource was not found
  /orgs:
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
        - in: query
          name: name
          schema:
            type: string
          description: Search for an Organization by name
      summary: Retrieve a list of Organizations for this user
      operationId: getOrganizations
      responses:
        '200':
          description: A list of Organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsListResponse'
    post:
      summary: Create a new Organization
      operationId: createOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInput'
      responses:
        '201':
          description: The newly created Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
  /orgs/{orgId}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The name of the Organization to update or retrieve
    get:
      summary: Retrieve Organization by ID
      operationId: getOrganizationByID
      responses:
        '200':
          description: The requested Organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '404':
          description: The resource was not found
    put:
      summary: Update Organization by ID
      operationId: updateOrganizationByID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInput'
      responses:
        '200':
          description: The updated organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '404':
          description: The resource was not found
    delete:
      summary: Delete Organization by ID
      operationId: deleteOrganizationByID
      responses:
        '204':
          description: Organization successfully deleted
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/connections:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name pf the Portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Retrieve a list of Connections
      operationId: getConnections
      responses:
        '200':
          description: A list of Connections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsListResponse'
    post:
      summary: Create a new Connection
      operationId: createConnection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionInput'
      responses:
        '201':
          description: The newly created Connection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
  /orgs/{orgId}/portals/{portalName}/connections/{name}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: The name of the Connection
    get:
      summary: Retrieve a Connection
      operationId: getConnection
      responses:
        '200':
          description: The Connection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
    put:
      summary: Update Connection
      operationId: updateConnection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionInput'
      responses:
        '200':
          description: The updated Connection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '404':
          description: The resource was not found
    delete:
      summary: Delete Connection
      operationId: deleteConnection
      responses:
        '204':
          description: Connection successfully deleted
        '404':
          description: The resource was not found
  /versions:
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
        - name: versionName
          in: query
          required: false
          schema:
            type: string
          description: Search for a Version by name
      summary: Retrieve a list of PortalVersions
      operationId: getPortalVersions
      responses:
        '200':
          description: A list of PortalVersions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalVersionsListResponse'
  /versions/{versionId}:
    parameters:
      - name: versionId
        in: path
        required: true
        schema:
          type: string
        description: The version of the PortalVersion
    get:
      summary: Retrieve a PortalVersion
      operationId: getPortalVersion
      responses:
        '200':
          description: The PortalVersion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalVersion'
  /versions/{versionId}/plugindefinitions:
    parameters:
      - name: versionId
        in: path
        required: true
        schema:
          type: string
        description: The version of the PortalVersion
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Retrieve a list of Plugin Definitions for a PortalVersion
      operationId: getPortalVersionPluginDefinitions
      responses:
        '200':
          description: A list of PortalVersion Plugin Definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginDefinitionsListResponse'
  /versions/{versionId}/plugindefinitions/{name}:
    parameters:
      - name: versionId
        in: path
        required: true
        schema:
          type: string
        description: The version of the PortalVersion
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: The name of the Plugin Definition
    get:
      summary: Retrieve a Plugin Definition
      operationId: getPortalVersionPluginDefinition
      responses:
        '200':
          description: The PortalVersion Plugin Definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginDefinition'
  /orgs/{orgId}/tenants:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organizzation
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Retrieve a list of tenants
      operationId: getTenants
      responses:
        '200':
          description: A list of tenants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsListResponse'
    post:
      summary: Create a new tenant
      operationId: createTenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantInput'
      responses:
        '201':
          description: The newly created tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
  /orgs/{orgId}/tenants/{tenantName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: tenantName
        in: path
        required: true
        schema:
          type: string
        description: The name of the tenant to retrieve or update
    get:
      summary: Retrieve a tenant by name
      operationId: getTenant
      responses:
        '200':
          description: The requested tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '404':
          description: The resource was not found
    put:
      summary: Update a tenant by name
      operationId: updateTenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantInput'
      responses:
        '200':
          description: The updated tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '404':
          description: The resource was not found
    delete:
      summary: Delete a tenant by name
      operationId: deleteTenant
      responses:
        '204':
          description: Tenant successfully deleted
        '404':
          description: The resource was not found
  /orgs/{orgId}/tenants/{tenantName}/users:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: tenantName
        in: path
        required: true
        schema:
          type: string
        description: The name of the tenant
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Tenant Users
      operationId: getTenantUsers
      responses:
        '200':
          description: The Tenant Users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantUsersListResponse'
        '404':
          description: The resource was not found
    post:
      summary: Create a TenantUser resource
      operationId: createTenantUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantUserInput'
      responses:
        '201':
          description: The newly created TenantUser
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantUser'
  /orgs/{orgId}/tenants/{tenantName}/users/{username}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: tenantName
        in: path
        required: true
        schema:
          type: string
        description: The name of the tenant
      - name: username
        in: path
        required: true
        schema:
          type: string
        description: The username of the user
    get:
      summary: Get a Tenant User
      operationId: getTenantUser
      responses:
        '200':
          description: The Tenant User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantUser'
        '404':
          description: The resource was not found
    delete:
      summary: Delete a Tenant User
      operationId: deleteTenantUser
      responses:
        '204':
          description: Tenant User successfully deleted
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals:
    get:
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the Organizzation
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Retrieve a list of portals
      operationId: getPortals
      responses:
        '200':
          description: A list of portals
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalsListResponse'
    post:
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the Organizzation
      summary: Create a new portal
      operationId: createPortal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalInput'
      responses:
        '201':
          description: The newly created portal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portal'
  /orgs/{orgId}/portals/{portalName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
    get:
      summary: Retrieve a portal by name
      operationId: getPortal
      responses:
        '200':
          description: The requested portal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portal'
        '404':
          description: The resource was not found
    put:
      summary: Update a portal by name
      operationId: updatePortal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalInput'
      responses:
        '200':
          description: The updated portal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portal'
        '404':
          description: The resource was not found
    delete:
      summary: Delete a portal by name
      operationId: deletePortal
      responses:
        '204':
          description: Portal successfully deleted
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/status:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
    get:
      summary: Get Portal status
      operationId: getPortalStatus
      responses:
        '200':
          description: Current Portal Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalStatus'
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/catalogproviders:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Catalog Providers
      operationId: getCatalogProviders
      responses:
        '200':
          description: List of Catalog Providers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogProvidersListResponse'
        '404':
          description: The resource was not found
    post:
      summary: Create a Catalog Provider
      operationId: createCatalogProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogProviderInput'
      responses:
        '201':
          description: The Catalog Provider was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogProvider'
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/catalogproviders/{providerName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: providerName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Catalog Provider
    get:
      summary: Get a Catalog Provider
      operationId: getCatalogProvider
      responses:
        '200':
          description: The Catalog Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogProvider'
        '404':
          description: The resource was not found
    put:
      summary: Update a Catalog Provider
      operationId: updateCatalogProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogProviderInput'
      responses:
        '200':
          description: The Catalog Provider was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogProvider'
        '404':
          description: The resource was not found
    delete:
      summary: Delete a Catalog Provider
      operationId: deleteCatalogProvider
      responses:
        '204':
          description: The Catalog Provider was deleted
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/integrations:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Integrations
      operationId: getIntegrations
      responses:
        '200':
          description: List of Integrations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsListResponse'
        '404':
          description: The resource was not found
    post:
      summary: Create an Integration
      operationId: createIntegration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationInput'
      responses:
        '201':
          description: The Integration was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/integrations/{integrationName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: integrationName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Integration
    get:
      summary: Get an Integration
      operationId: getIntegration
      responses:
        '200':
          description: The Integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        '404':
          description: The resource was not found
    put:
      summary: Update an Integration
      operationId: updateIntegration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationInput'
      responses:
        '200':
          description: The Integration was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        '404':
          description: The resource was not found
    delete:
      summary: Delete an Integration
      operationId: deleteIntegration
      responses:
        '204':
          description: The Integration was deleted
        '404':
          description: The resource was not found
  /orgs/{orgId}/tenants/{tenantName}/identityproviders:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: tenantName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Tenant
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Identity Providers
      operationId: getIdentityProviders
      responses:
        '200':
          description: List of Identity Providers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvidersListResponse'
        '404':
          description: The resource was not found
    post:
      summary: Create an Identity Provider
      operationId: createIdentityProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderInput'
      responses:
        '201':
          description: The Identity Provider was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '404':
          description: The resource was not found
  /orgs/{orgId}/tenants/{tenantName}/identityproviders/{providerName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: tenantName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: providerName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Identity Provider
    get:
      summary: Get an Identity Provider
      operationId: getIdentityProvider
      responses:
        '200':
          description: The Identity Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '404':
          description: The resource was not found
    put:
      summary: Update an Identity Provider
      operationId: updateIdentityProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderInput'
      responses:
        '200':
          description: The Identity Provider was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
        '404':
          description: The resource was not found
    delete:
      summary: Delete an Identity Provider
      operationId: deleteIdentityProvider
      responses:
        '204':
          description: The Identity Provider was deleted
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/proxies:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Proxies
      operationId: getPortalProxies
      responses:
        '200':
          description: List of Portal Proxies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalProxiesListResponse'
        '404':
          description: The resource was not found
    post:
      summary: Create a Portal Proxy
      operationId: createPortalProxy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalProxyInput'
      responses:
        '201':
          description: The Portal Proxy was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalProxy'
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/proxies/{proxyName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: proxyName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal proxy
    get:
      summary: Get a Portal Proxy
      operationId: getPortalProxy
      responses:
        '200':
          description: The Portal Proxy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalProxy'
        '404':
          description: The resource was not found
    put:
      summary: Update a Portal Proxy
      operationId: updatePortalProxy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortalProxyInput'
      responses:
        '200':
          description: The Portal Proxy was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalProxy'
        '404':
          description: The resource was not found
    delete:
      summary: Delete a Portal Proxy
      operationId: deletePortalProxy
      responses:
        '204':
          description: The Portal Proxy was deleted
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/pluginconfigurations:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Retrieve a list of Plugin Configurations
      operationId: getPluginConfigurations
      responses:
        '200':
          description: A list of Plugin Configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfigurationsListResponse'
    post:
      summary: Create a new Plugin Configuration
      operationId: createPluginConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfigurationInput'
      responses:
        '201':
          description: The newly created Plugin Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfiguration'
  /orgs/{orgId}/portals/{portalName}/pluginconfigurations/{pluginName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Portal
      - name: pluginName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Plugin
    get:
      summary: Retrieve a Plugin Configurations
      operationId: getPluginConfiguration
      responses:
        '200':
          description: A Plugin Configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfiguration'
    put:
      summary: Update a Plugin Configuration
      operationId: updatePluginConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginConfigurationInput'
      responses:
        '200':
          description: The Plugin Configuation was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginConfiguration'
        '404':
          description: The resource was not found
    delete:
      summary: Delete a Plugin Configuration
      operationId: deletePluginConfiguration
      responses:
        '204':
          description: The Plugin Configuration was deleted
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/authproviders:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Auth Providers
      operationId: getAuthProviders
      responses:
        '200':
          description: List of Auth Providers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProvidersListResponse'
        '404':
          description: The resource was not found
    post:
      summary: Create an Auth Provider
      operationId: createAuthProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthProviderInput'
      responses:
        '201':
          description: The Auth Provider was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProvider'
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/authproviders/{providerName}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: providerName
        in: path
        required: true
        schema:
          type: string
        description: The name of the Auth Provider
    get:
      summary: Get an Auth Provider
      operationId: getAuthProvider
      responses:
        '200':
          description: The Auth Provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProvider'
        '404':
          description: The resource was not found
    put:
      summary: Update an Auth Provider
      operationId: updateAuthProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthProviderInput'
      responses:
        '200':
          description: The Auth Provider was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProvider'
        '404':
          description: The resource was not found
    delete:
      summary: Delete an Auth Provider
      operationId: deleteAuthProvider
      responses:
        '204':
          description: The Auth Provider was deleted
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/entitypagelayouts:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Organization
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
    get:
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Limit number of items
        - name: prev
          in: query
          required: false
          schema:
            type: string
          description: The previous cursor
        - name: next
          in: query
          required: false
          schema:
            type: string
          description: The next cursor
      summary: Get a list of Entity Page Layouts
      operationId: getEntityPageLayouts
      responses:
        '200':
          description: List of Entity Page Layouts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityPageLayoutsListResponse'
        '404':
          description: The resource was not found
    post:
      summary: Create an Entity Page Layout
      operationId: createEntityPageLayout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityPageLayoutInput'
      responses:
        '201':
          description: The Entity Page Layout was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityPageLayout'
        '404':
          description: The resource was not found
  /orgs/{orgId}/portals/{portalName}/entitypagelayouts/{name}:
    parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
        description: The ID of the org
      - name: portalName
        in: path
        required: true
        schema:
          type: string
        description: The name of the portal
      - name: name
        in: path
        required: true
        schema:
          type: string
        description: The name of the EntityPageLayout
    get:
      summary: Get an Entity Page Layout
      operationId: getEntityPageLayout
      responses:
        '200':
          description: The Entity Page Layout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityPageLayout'
        '404':
          description: The resource was not found
    put:
      summary: Update an Entity Page Layout
      operationId: updateEntityPageLayout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityPageLayoutInput'
      responses:
        '200':
          description: The Entity Page Layout was updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityPageLayout'
        '404':
          description: The resource was not found
    delete:
      summary: Delete an Entity Page Layout
      operationId: deleteEntityPageLayout
      responses:
        '204':
          description: The Entity Page Layout was deleted
        '404':
          description: The resource was not found
components:
  schemas:
    AuthProvider:
      description: Represents a Flightdeck Auth Provider resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/AuthProviderInput'
        - type: object
          properties:
            organizationId:
              type: string
              format: uuid
            portalName:
              type: string
          required:
            - organizationId
            - portalName
    AuthProviderConfig:
      type: object
      required:
        - configType
      properties:
        configType:
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: '-'
    AuthProviderInput:
      type: object
      properties:
        name:
          description: The name of the Auth Provider resource.
          type: string
          format: lowercasealpha
          minLength: 3
          maxLength: 24
        providerConfig:
          oneOf:
            - $ref: '#/components/schemas/GithubAuthProvider'
            - $ref: '#/components/schemas/GitlabAuthProvider'
            - $ref: '#/components/schemas/GoogleAuthProvider'
          discriminator:
            propertyName: configType
            mapping:
              github: '#/components/schemas/GithubAuthProvider'
              gitlab: '#/components/schemas/GitlabAuthProvider'
              google: '#/components/schemas/GoogleAuthProvider'
      required:
        - name
        - providerConfig
    AuthProvidersListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AuthProvider'
        total:
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    BaseResourceType:
      type: object
      properties:
        id:
          description: The ID of the Flightdeck resource.
          type: string
          format: uuid
        createdAt:
          description: The date and time of the resources creation.
          type: string
          format: date-time
      required:
        - id
        - createdAt
    CatalogProvider:
      description: Represents a Flightdeck Catalog Provider.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/CatalogProviderInput'
        - type: object
          properties:
            organizationId:
              description: The ID of the Flightdeck Organization.
              type: string
              format: uuid
            portalName:
              description: The name of the Flightdeck Portal.
              type: string
          required:
            - organizationId
            - portalName
    CatalogProviderConfig:
      type: object
      required:
        - configType
      properties:
        configType:
          description: The type of the Flightdeck Catalog Provider configuration.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: '-'
    CatalogProviderInput:
      type: object
      properties:
        name:
          description: The name of the Catalog Provider resource.
          type: string
          format: lowercasealpha
          minLength: 3
          maxLength: 24
        providerConfig:
          description: The configuration for the Flightdeck Catalog Provider.
          oneOf:
            - $ref: '#/components/schemas/GithubCatalogProvider'
            - $ref: '#/components/schemas/GitlabCatalogProvider'
            - $ref: '#/components/schemas/LocationCatalogProvider'
          discriminator:
            propertyName: configType
            mapping:
              github: '#/components/schemas/GithubCatalogProvider'
              gitlab: '#/components/schemas/GitlabCatalogProvider'
              location: '#/components/schemas/LocationCatalogProvider'
      required:
        - name
        - providerConfig
    CatalogProvidersListResponse:
      type: object
      properties:
        items:
          description: A list of Flightdeck Catalog Provider resources.
          type: array
          items:
            $ref: '#/components/schemas/CatalogProvider'
        total:
          description: The total number of Flightdeck Catalog Provider resources.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    Cluster:
      description: Represents a Flightdeck Cluster resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - type: object
          properties:
            name:
              description: The name of the Cluster resource.
              type: string
              format: lowercasealpha
              minLength: 3
              maxLength: 24
            displayName:
              description: The common name of the Cluster resource.
              type: string
            region:
              description: The region where the Cluster is located.
              type: string
          required:
            - name
            - displayName
            - region
    ClustersListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        total:
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    Connection:
      description: Represents a Flightdeck Connection resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/ConnectionInput'
        - type: object
          properties:
            organizationId:
              description: The ID of the Flightdeck Organization.
              type: string
              format: uuid
            portalName:
              description: The name of the Flightdeck Portal.
              type: string
          required:
            - organizationId
            - portalName
    ConnectionConfig:
      type: object
      required:
        - configType
      properties:
        configType:
          description: The type of the Flightdeck Connection configuration.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: '-'
    ConnectionInput:
      type: object
      properties:
        name:
          description: The name of the Flightdeck Connection resource.
          type: string
          format: lowercasealpha
          minLength: 3
          maxLength: 24
        connectionConfig:
          description: The configuration for the Flightdeck Connection.
          oneOf:
            - $ref: '#/components/schemas/TailscaleConnection'
          discriminator:
            propertyName: configType
            mapping:
              tailscale: '#/components/schemas/TailscaleConnection'
      required:
        - name
        - connectionConfig
    ConnectionsListResponse:
      type: object
      properties:
        items:
          description: A list of Flightdeck Connections.
          type: array
          items:
            $ref: '#/components/schemas/Connection'
        total:
          description: The total number of Flightdeck Connections.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    EntityPageCardSpec:
      type: object
      properties:
        path:
          description: The unique Entity Page Extension path.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: path
        filters:
          description: Named filters for this Entity Page Extension.
          type: array
          nullable: true
          items:
            type: string
          x-oapi-codegen-extra-tags:
            tfsdk: filters
        config:
          description: Configuration for the Entity Page Extension.
          type: object
          nullable: true
          x-oapi-codegen-extra-tags:
            tfsdk: config
      required:
        - path
    EntityPageContentSpec:
      type: object
      properties:
        path:
          description: The unique Entity Page Extension path.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: path
        filters:
          description: Named filters for this Entity Page Extension.
          type: array
          nullable: true
          items:
            type: string
          x-oapi-codegen-extra-tags:
            tfsdk: filters
        config:
          description: Configuration for the Entity Page Extension.
          type: object
          nullable: true
          x-oapi-codegen-extra-tags:
            tfsdk: config
      required:
        - path
    EntityPageLayout:
      description: Represents a Flightdeck Entity Page Layout resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/EntityPageLayoutInput'
        - type: object
          properties:
            organizationId:
              description: The ID of the Flightdeck Organization.
              type: string
              format: uuid
            portalName:
              description: The name of the Flightdeck Portal.
              type: string
          required:
            - organizationId
            - portalName
    EntityPageLayoutInput:
      type: object
      properties:
        name:
          description: The name of the Flightdeck Entity Page Layout resource.
          type: string
        active:
          description: Indicates whether the Flightdeck Page Layout is the activated.
          type: boolean
        contentOrder:
          description: The order in which to display Entity Content pages.
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EntityPageContentSpec'
        cardOrder:
          description: The order in which to display Entity Card components.
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EntityPageCardSpec'
      required:
        - name
    EntityPageLayoutsListResponse:
      type: object
      properties:
        items:
          description: A list of Flightdeck Entity Page Layout resources.
          type: array
          items:
            $ref: '#/components/schemas/EntityPageLayout'
        total:
          description: The total number of Flightdeck Entity Page Layout resources.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    GithubAppIntegration:
      type: object
      properties:
        allowedInstallationOwners:
          description: |-
            List of installation owners allowed to be used by this GitHub app. The GitHub UI does not provide a way to list the installations.
            However you can list the installations with the GitHub API. You can find the list of installations here:
            https://api.github.com/app/installations
            The relevant documentation for this is here.
            https://docs.github.com/en/rest/reference/apps#list-installations-for-the-authenticated-app--code-samples
          type: array
          items:
            type: string
          x-oapi-codegen-extra-tags:
            tfsdk: allowed_installation_owners
        appId:
          description: The numeric GitHub App ID, string for environment variables
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: app_id
        clientId:
          description: The client ID to use
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: client_id
        clientSecret:
          description: The client secret to use
          type: string
          format: password
          writeOnly: true
          x-oapi-codegen-extra-tags:
            tfsdk: client_secret
            arctirmapstructue: '-'
            json: '-'
        privateKey:
          description: The private key to use for auth against the app
          type: string
          format: password
          writeOnly: true
          x-oapi-codegen-extra-tags:
            tfsdk: private_key
            arctirmapstructue: '-'
            json: '-'
        webhookSecret:
          description: The secret used for webhooks
          type: string
          format: password
          writeOnly: true
          x-oapi-codegen-extra-tags:
            tfsdk: webhook_secret
            arctirmapstructue: '-'
            json: '-'
      required:
        - appId
        - clientId
        - clientSecret
        - privateKey
        - webhookSecret
    GithubAuthProvider:
      description: |
        Represents the configuration for a Github OAuth2 provider.
      allOf:
        - $ref: '#/components/schemas/AuthProviderConfig'
        - $ref: '#/components/schemas/GithubAuthProviderInput'
    GithubAuthProviderInput:
      type: object
      properties:
        clientId:
          description: The client ID for the Github OAuth2 provider.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: client_id
        clientSecret:
          description: The client secret for the Github OAuth2 provider.
          type: string
          format: password
          writeOnly: true
          x-oapi-codegen-extra-tags:
            tfsdk: client_secret
        callbackUrl:
          description: The callback URL for the Github OAuth2 provider.
          type: string
          nullable: true
          x-oapi-codegen-extra-tags:
            tfsdk: callback_url
        enterpriseInstanceUrl:
          description: The instance URL for the Github Enterprise instance.
          type: string
          nullable: true
          x-oapi-codegen-extra-tags:
            tfsdk: enterprise_instance_url
        additionalScopes:
          description: Any additional scopes necessary for the Github OAuth2 provider.
          type: array
          nullable: true
          items:
            type: string
          x-oapi-codegen-extra-tags:
            tfsdk: additional_scopes
      required:
        - clientId
        - clientSecret
    GithubCatalogProvider:
      allOf:
        - $ref: '#/components/schemas/CatalogProviderConfig'
        - $ref: '#/components/schemas/GithubCatalogProviderInput'
    GithubCatalogProviderFilters:
      x-oapi-codegen-extra-tags:
        tfsdk: filters
      type: object
      properties:
        branch:
          description: The branch to use for the catalog.
          type: string
          default: main
          x-oapi-codegen-extra-tags:
            tfsdk: branch
        repository:
          description: The repository to use for the catalog.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: repository
        allowForks:
          description: Whether to include forks in the catalog.
          type: boolean
          default: false
          x-oapi-codegen-extra-tags:
            tfsdk: allow_forks
        topic:
          $ref: '#/components/schemas/GithubCatalogProviderFiltersTopic'
        visibility:
          description: The visibility of the repositories to include in the catalog.
          type: array
          items:
            type: string
            enum:
              - private
              - internal
              - public
          x-oapi-codegen-extra-tags:
            tfsdk: visibility
    GithubCatalogProviderFiltersTopic:
      x-oapi-codegen-extra-tags:
        tfsdk: topic
      type: object
      properties:
        include:
          description: A list of Github topics to include in the catalog.
          type: array
          items:
            type: string
          default: []
          x-oapi-codegen-extra-tags:
            tfsdk: include
        exclude:
          description: A list of Github topics to exclude from the catalog.
          type: array
          items:
            type: string
          default: []
          x-oapi-codegen-extra-tags:
            tfsdk: exclude
    GithubCatalogProviderInput:
      type: object
      properties:
        host:
          description: The host for the Github catalog provider.
          type: string
          default: https://github.com
          x-oapi-codegen-extra-tags:
            tfsdk: host
        organization:
          description: The organization to use for the catalog.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: organization
        catalogPath:
          description: The path to the catalog file.
          default: ./catalog.yaml
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: catalog_path
        filters:
          $ref: '#/components/schemas/GithubCatalogProviderFilters'
        schedule:
          $ref: '#/components/schemas/TaskScheduleDefinitionConfig'
      required:
        - organization
    GithubIdentityProvider:
      description: Represents a Github Identity Provider resource.
      allOf:
        - $ref: '#/components/schemas/IdentityProviderConfig'
        - $ref: '#/components/schemas/GithubIdentityProviderInput'
    GithubIdentityProviderInput:
      type: object
      properties:
        redirectUri:
          description: The URI to redirect to after the user has authenticated.
          type: string
        clientId:
          description: The client ID of the Github application.
          type: string
        clientSecret:
          description: The client secret of the Github application.
          type: string
          format: password
          writeOnly: true
        baseUrl:
          description: The base URL of the Github application.
          type: string
          default: https://github.com
        apiUrl:
          description: The API URL of the Github application.
          type: string
          default: https://api.github.com
      required:
        - redirectUri
        - clientId
        - clientSecret
    GithubIntegration:
      description: Represents a GitHub Integration resource.
      allOf:
        - $ref: '#/components/schemas/IntegrationConfig'
        - $ref: '#/components/schemas/GithubIntegrationInput'
    GithubIntegrationInput:
      type: object
      properties:
        apiBaseUrl:
          description: The base url for the GitHub API, for example https://api.github.com
          type: string
          default: https://api.github.com
          x-oapi-codegen-extra-tags:
            tfsdk: api_base_url
        apps:
          description: GitHub Apps configuration
          type: array
          items:
            $ref: '#/components/schemas/GithubAppIntegration'
          x-oapi-codegen-extra-tags:
            tfsdk: apps
        host:
          description: The hostname of the given GitHub instance
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: host
        rawBaseUrl:
          description: The base url for GitHub raw resources, for example https://raw.githubusercontent.com
          type: string
          default: https://raw.githubusercontent.com
          x-oapi-codegen-extra-tags:
            tfsdk: raw_base_url
        token:
          description: Token used to authenticate requests.
          type: string
          format: password
          writeOnly: true
          x-oapi-codegen-extra-tags:
            tfsdk: token
            arctirmapstructure: tokenRef
      required:
        - host
    GitlabAuthProvider:
      description: |
        Represents the configuration for a Gitlab OAuth2 provider.
      allOf:
        - $ref: '#/components/schemas/AuthProviderConfig'
        - $ref: '#/components/schemas/GitlabAuthProviderInput'
    GitlabAuthProviderInput:
      type: object
      properties:
        clientId:
          description: The client ID for the Gitlab OAuth2 provider.
          type: string
        clientSecret:
          description: The client secret for the Gitlab OAuth2 provider.
          type: string
          format: password
          writeOnly: true
        audience:
          description: The audience for the Gitlab OAuth2 provider.
          type: string
        callbackUrl:
          description: The callback URL for the Gitlab OAuth2 provider.
          type: string
        additionalScopes:
          description: Any additional scopes necessary for the Gitlab OAuth2 provider.
          type: array
          items:
            type: string
          x-oapi-codegen-extra-tags:
            tfsdk: additional_scopes
      required:
        - clientId
        - clientSecret
    GitlabCatalogProvider:
      allOf:
        - $ref: '#/components/schemas/CatalogProviderConfig'
        - $ref: '#/components/schemas/GitlabCatalogProviderInput'
    GitlabCatalogProviderInput:
      type: object
      properties:
        host:
          description: The host for the Gitlab catalog provider.
          type: string
          default: https://gitlab.com
          x-oapi-codegen-extra-tags:
            tfsdk: host
        group:
          description: The group to use for the catalog.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: group
        branch:
          description: The branch to use for the catalog.
          type: string
          default: main
          x-oapi-codegen-extra-tags:
            tfsdk: branch
        entityFilename:
          description: The filename to use for the entity.
          default: ./catalog-info.yaml
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: entity_filename
        projectPattern:
          description: The project pattern to use for the catalog.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: project_pattern
        userPattern:
          description: The user pattern to use for the catalog.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: user_pattern
        groupPattern:
          description: The group pattern to use for the catalog.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: group_pattern
        skipForkedRepos:
          description: Whether to skip forked repositories in the catalog.
          type: boolean
          default: true
          x-oapi-codegen-extra-tags:
            tfsdk: skip_forked_repos
        schedule:
          $ref: '#/components/schemas/TaskScheduleDefinitionConfig'
      required:
        - host
    GitlabIdentityProvider:
      description: Represents a Gitlab Identity Provider resource.
      allOf:
        - $ref: '#/components/schemas/IdentityProviderConfig'
        - $ref: '#/components/schemas/GitlabIdentityProviderInput'
    GitlabIdentityProviderInput:
      type: object
      properties:
        redirectUri:
          description: The URI to redirect to after the user has authenticated.
          type: string
        clientId:
          description: The client ID of the Gitlab application.
          type: string
        clientSecret:
          description: The client secret of the Gitlab application.
          type: string
          format: password
          writeOnly: true
      required:
        - redirectUri
        - clientId
        - clientSecret
    GitlabIntegration:
      description: Represents a Gitlab Integration resource.
      allOf:
        - $ref: '#/components/schemas/IntegrationConfig'
        - $ref: '#/components/schemas/GitlabIntegrationInput'
    GitlabIntegrationInput:
      description: Represents a Gitlab Integration resource.
      type: object
      properties:
        host:
          description: The hostname of the Gitlab instance.
          type: string
          default: gitlab.com
          format: hostname
          x-oapi-codegen-extra-tags:
            tfsdk: host
        token:
          description: Token used to authenticate requests.
          type: string
          format: password
          writeOnly: true
          x-oapi-codegen-extra-tags:
            tfsdk: token
        baseUrl:
          description: The base URL of the Gitlab instance.
          type: string
          default: https://gitlab.com
          x-oapi-codegen-extra-tags:
            tfsdk: base_url
        apiBaseUrl:
          description: The base URL of the Gitlab API.
          type: string
          default: https://gitlab.com/api/v4
          x-oapi-codegen-extra-tags:
            tfsdk: api_base_url
      required:
        - host
        - token
    GoogleAuthProvider:
      allOf:
        - $ref: '#/components/schemas/AuthProviderConfig'
        - $ref: '#/components/schemas/GoogleAuthProviderInput'
    GoogleAuthProviderInput:
      type: object
      properties:
        clientId:
          description: The client ID for the Google OAuth2 provider.
          type: string
        clientSecret:
          description: The client secret for the Google OAuth2 provider.
          type: string
          format: password
          writeOnly: true
        callbackUrl:
          description: The callback URL for the Google OAuth2 provider.
          type: string
        additionalScopes:
          description: Any additional scopes necessary for the Google OAuth2 provider.
          type: array
          items:
            type: string
          x-oapi-codegen-extra-tags:
            tfsdk: additional_scopes
      required:
        - clientId
        - clientSecret
    GoogleIdentityProvider:
      description: Represents a Google Identity Provider resource.
      allOf:
        - $ref: '#/components/schemas/IdentityProviderConfig'
        - $ref: '#/components/schemas/GoogleIdentityProviderInput'
    GoogleIdentityProviderInput:
      type: object
      properties:
        redirectUri:
          description: The URI to redirect to after the user has authenticated.
          type: string
        clientId:
          description: The client ID of the Google application.
          type: string
        clientSecret:
          description: The client secret of the Google application.
          type: string
          format: password
          writeOnly: true
        hostedDomain:
          description: The hosted domain of the Google application.
          type: string
        userIp:
          description: The user IP of the Google application.
          type: boolean
        refreshToken:
          description: Whether to refresh the token of the Google application.
          type: boolean
    IdentityProvider:
      description: Represents a Flightdeck Identity Provider resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/IdentityProviderInput'
        - type: object
          properties:
            organizationId:
              description: The ID of the Flightdeck Organization.
              type: string
              format: uuid
            tenantName:
              description: The name of the Flightdeck Tenant.
              type: string
          required:
            - organizationId
            - tenantName
    IdentityProviderConfig:
      description: Represents an Identity Provider configuration resource.
      type: object
      required:
        - configType
      properties:
        configType:
          description: The type of Identity Provider configuration.
          type: string
    IdentityProviderInput:
      type: object
      properties:
        name:
          description: The name of the Flightdeck Identity Provider resource.
          type: string
          format: lowercasealpha
          minLength: 3
          maxLength: 24
        providerConfig:
          description: The configuration of the Identity Provider.
          oneOf:
            - $ref: '#/components/schemas/GithubIdentityProvider'
            - $ref: '#/components/schemas/GitlabIdentityProvider'
            - $ref: '#/components/schemas/GoogleIdentityProvider'
          discriminator:
            propertyName: configType
            mapping:
              github: '#/components/schemas/GithubIdentityProvider'
              gitlab: '#/components/schemas/GitlabIdentityProvider'
              google: '#/components/schemas/GoogleIdentityProvider'
      required:
        - name
        - providerConfig
    IdentityProvidersListResponse:
      type: object
      properties:
        items:
          description: The list of Flightdeck Identity Provider resources.
          type: array
          items:
            $ref: '#/components/schemas/IdentityProvider'
        total:
          description: The total number of Flightdeck Identity Provider resources.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    Integration:
      description: Represents an Integration resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/IntegrationInput'
        - type: object
          properties:
            organizationId:
              description: The ID of the Flightdeck Organization.
              type: string
              format: uuid
            portalName:
              description: The name of the Flightdeck Portal.
              type: string
          required:
            - organizationId
            - portalName
    IntegrationConfig:
      description: Represents an Integration configuration.
      type: object
      required:
        - configType
      properties:
        configType:
          description: The type of integration configuration.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: '-'
    IntegrationInput:
      description: Represents an Integration resource.
      type: object
      properties:
        name:
          description: The name of the Integration.
          type: string
          format: lowercasealpha
          minLength: 3
          maxLength: 24
        integrationConfig:
          description: The configuration of the Integration.
          oneOf:
            - $ref: '#/components/schemas/GithubIntegration'
            - $ref: '#/components/schemas/GitlabIntegration'
          discriminator:
            propertyName: configType
            mapping:
              github: '#/components/schemas/GithubIntegration'
              gitlab: '#/components/schemas/GitlabIntegration'
      required:
        - name
        - integrationConfig
    IntegrationsListResponse:
      description: Represents a list of Integration resources.
      type: object
      properties:
        items:
          description: The list of Integration resources.
          type: array
          items:
            $ref: '#/components/schemas/Integration'
        total:
          description: The total number of Integration resources.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    LocationCatalogProvider:
      allOf:
        - $ref: '#/components/schemas/CatalogProviderConfig'
        - $ref: '#/components/schemas/LocationCatalogProviderInput'
    LocationCatalogProviderInput:
      x-arctir-generate: true
      type: object
      properties:
        target:
          description: The target URL for the location catalog provider.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: target
        allow:
          description: The types of entities to allow in the catalog.
          type: array
          items:
            type: string
            enum:
              - API
              - Component
              - Domain
              - Group
              - Location
              - Resource
              - System
              - Template
              - User
          x-oapi-codegen-extra-tags:
            tfsdk: allow
      required:
        - target
    Organization:
      description: Represents a Flightdeck Organization.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/OrganizationInput'
        - type: object
          properties:
            owner:
              description: The Flightdeck User ID of the Organization's owner.
              type: string
              format: uuid
            subdomain:
              description: The designated Flightdeck subdomain for this Organization.
              type: string
          required:
            - owner
            - subdomain
    OrganizationInput:
      type: object
      properties:
        name:
          description: The name of the Flightdeck Organization.
          type: string
          format: lowercasealpha
          minLength: 3
          maxLength: 24
        clusterId:
          description: The ID of the Flightdeck Cluster that manages this Organization.
          type: string
          format: uuid
        subscription:
          $ref: '#/components/schemas/SubscriptionInfo'
      required:
        - name
        - clusterId
    OrganizationsListResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
        total:
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    PageInfo:
      type: object
      properties:
        prev:
          description: The URL of the previous page.
          type: string
        next:
          description: The URL of the next page.
          type: string
    PluginConfiguration:
      description: Represents a Plugin Configuration resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/PluginConfigurationInput'
        - type: object
          properties:
            organizationId:
              description: The ID of the Flightdeck Organization.
              type: string
              format: uuid
            portalName:
              description: The name of the Flightdeck Portal.
              type: string
          required:
            - organizationId
            - portalName
    PluginConfigurationDefinitionSpec:
      description: Represents a Plugin Configuration Definition resource.
      type: object
      properties:
        name:
          description: The name of the Plugin Definition.
          type: string
        portalVersionId:
          description: The ID of the Flightdeck Portal Version for the Plugin Definition.
          type: string
      required:
        - name
        - portalVersionId
    PluginConfigurationInput:
      description: Represents a Plugin Configuration resource.
      type: object
      properties:
        enabled:
          description: Indicates whether the Plugin Configuration is enabled.
          type: boolean
        frontendConfig:
          description: The configuration of the Plugin on the frontend.
          type: object
        backendConfig:
          description: The configuration of the Plugin on the backend.
          type: object
        definition:
          $ref: '#/components/schemas/PluginConfigurationDefinitionSpec'
      required:
        - enabled
        - definition
    PluginConfigurationsListResponse:
      type: object
      properties:
        items:
          description: The list of Plugin Configuration resources.
          type: array
          items:
            $ref: '#/components/schemas/PluginConfiguration'
        total:
          description: The total number of Plugin Configuration resources.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    PluginDefinition:
      description: Represents a Plugin Definition resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/PluginDefinitionInput'
    PluginDefinitionBackendSpec:
      description: Represents a Plugin Definition Backend resource.
      type: object
      properties:
        plugins:
          description: The list of Plugin Name Version resources.
          type: array
          items:
            $ref: '#/components/schemas/PluginNameVersionSpec'
        configSchema:
          description: The configuration schema of the Plugin.
          type: object
        uiSchema:
          type: object
    PluginDefinitionFrontendExtension:
      description: Represents a Plugin Definition Frontend Extension resource.
      type: object
      properties:
        path:
          description: The unique Entity Extension path.
          type: string
        type:
          description: The type of the Entity Extension.
          type: string
          enum:
            - Card
            - Content
        title:
          description: The title of the Entity Extension.
          type: string
        description:
          description: The description of the Entity Extension.
          type: string
        configSchema:
          description: The configuration schema of the Entity Extension.
          type: object
        uiSchema:
          description: The UI schema of the Entity Extension.
          type: object
      required:
        - type
        - path
        - title
        - description
    PluginDefinitionFrontendSpec:
      description: Represents a Plugin Definition Frontend resource.
      type: object
      properties:
        plugins:
          description: The list of Plugin Name Version resources.
          type: array
          items:
            $ref: '#/components/schemas/PluginNameVersionSpec'
        configSchema:
          description: The configuration schema of the Plugin.
          type: object
        uiSchema:
          description: The UI schema of the Plugin.
          type: object
        extensions:
          description: The list of Plugin Definition Frontend Extension resources.
          type: array
          items:
            $ref: '#/components/schemas/PluginDefinitionFrontendExtension'
    PluginDefinitionInput:
      description: Represents a Plugin Definition resource.
      type: object
      properties:
        name:
          description: The name of the Plugin Definition.
          type: string
          format: lowercasealpha
          minLength: 3
          maxLength: 24
        displayName:
          description: The display name of the Plugin Definition.
          type: string
        description:
          description: The description of the Plugin Definition.
          type: string
        iconName:
          description: The icon name of the Plugin Definition.
          type: string
        frontend:
          $ref: '#/components/schemas/PluginDefinitionFrontendSpec'
        backend:
          $ref: '#/components/schemas/PluginDefinitionBackendSpec'
      required:
        - name
        - displayName
        - description
        - iconName
    PluginDefinitionsListResponse:
      description: Represents a list of Plugin Definition resources.
      type: object
      properties:
        items:
          description: The list of Plugin Definition resources.
          type: array
          items:
            $ref: '#/components/schemas/PluginDefinition'
        total:
          description: The total number of Plugin Definition resources.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    PluginNameVersionSpec:
      description: Represents a Plugin Name Version resource.
      type: object
      properties:
        name:
          description: The name of the Plugin.
          type: string
        version:
          description: The version of the Plugin.
          type: string
    Portal:
      description: Represents a Portal resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/PortalInput'
        - type: object
          properties:
            organizationId:
              description: The ID of the Flightdeck Organization.
              type: string
              format: uuid
            url:
              description: The primary URL of the Portal.
              type: string
            hostname:
              description: The hostname of the Portal.
              type: string
            identifier:
              description: The identifier of the Portal.
              type: string
            status:
              description: The current reconciliation status of the Portal.
              $ref: '#/components/schemas/PortalStatus'
            version:
              description: The current version of the Portal.
              $ref: '#/components/schemas/PortalVersion'
          required:
            - organizationId
            - url
            - hostname
            - identifier
    PortalInput:
      description: Represents a Portal resource.
      type: object
      properties:
        name:
          description: The name of the Portal.
          type: string
          format: lowercasealpha
          minLength: 3
          maxLength: 16
        title:
          description: The HTML title of the Portal.
          type: string
        organizationName:
          description: The name of the Organization operating this Portal.
          type: string
        domain:
          description: The primary domain of the Portal.
          type: string
          format: lowercasealpha
          minLength: 3
          maxLength: 16
        versionId:
          description: The ID of the Portal Version.
          type: string
        tenantName:
          description: The name of the Tenant providing user idenity to this Portal.
          type: string
        alternateDomains:
          description: A list of alternate domains for the Portal.
          type: array
          items:
            type: string
            format: hostname
      required:
        - name
        - title
        - organizationName
        - tenantName
        - domain
        - versionId
        - alternateDomains
    PortalProxiesListResponse:
      description: Represents a list of Portal Proxy resources.
      type: object
      properties:
        items:
          description: The list of Portal Proxy resources.
          type: array
          items:
            $ref: '#/components/schemas/PortalProxy'
        total:
          description: The total number of Portal Proxy resources.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    PortalProxy:
      description: Represents a Portal Proxy resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/PortalProxyInput'
        - type: object
          properties:
            organizationId:
              type: string
              format: uuid
            portalName:
              type: string
          required:
            - organizationId
            - portalName
    PortalProxyHeader:
      description: Represents a Portal Proxy Header resource.
      type: object
      properties:
        name:
          description: The name of the HTTP header.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: name
        value:
          description: The value of the HTTP header.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: value
      required:
        - name
        - value
    PortalProxyInput:
      description: Represents a Portal Proxy resource.
      type: object
      properties:
        name:
          description: The name of the Portal Proxy.
          type: string
        endpoint:
          description: The endpoint of the Portal Proxy.
          type: string
        target:
          description: The HTTP target of the Portal Proxy.
          type: string
        httpHeaders:
          description: The list of Portal Proxy Header resources to be applied.
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/PortalProxyHeader'
        pathRewrite:
          description: The list of Portal Proxy Path Rewrite resources to be applied.
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/PortalProxyPathRewrite'
        changeOrigin:
          description: Indicates whether to change the origin of the Portal Proxy.
          type: boolean
        allowedMethods:
          description: The list of allowed HTTP methods.
          type: array
          nullable: true
          items:
            type: string
        allowedHeaders:
          description: The list of allowed HTTP headers.
          type: array
          nullable: true
          items:
            type: string
        credentials:
          description: The credential configuration of the Portal Proxy.
          type: string
          enum:
            - require
            - forward
            - dangerously-allow-unauthenticated
      required:
        - name
        - endpoint
        - target
        - credentials
    PortalProxyPathRewrite:
      description: Represents a Portal Proxy Path Rewrite resource.
      type: object
      properties:
        src:
          description: The source path to rewrite.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: src
        dst:
          description: The destination of the path to rewrite.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: dst
      required:
        - src
        - dst
    PortalStatus:
      description: Represents the current status of a Portal.
      type: object
      properties:
        status:
          description: The current status of the Portal.
          type: string
        detail:
          description: A detailed message about the current status of the Portal.
          type: string
      required:
        - status
        - detail
    PortalVersion:
      description: Represents a Flightdeck Portal Version resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - type: object
          properties:
            version:
              description: The human-readable semver version of the Flightdeck Portal.
              type: string
            major:
              description: The version's major release number.
              type: integer
            minor:
              description: The version's minor release number.
              type: integer
            patch:
              description: The version's patch release number.
              type: integer
            rev:
              description: The version's revision release number.
              type: integer
          required:
            - version
            - major
            - minor
            - patch
            - rev
    PortalVersionsListResponse:
      type: object
      properties:
        items:
          description: A lidt of Flightdeck Portal Version resources.
          type: array
          items:
            $ref: '#/components/schemas/PortalVersion'
        total:
          description: The total number of Flightdeck Portal Version resources.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    PortalsListResponse:
      description: Represents a list of Portal resources.
      type: object
      properties:
        items:
          description: The list of Portal resources.
          type: array
          items:
            $ref: '#/components/schemas/Portal'
        total:
          description: The total number of Portal resources.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    SubscriptionEntitlements:
      description: Represents a Flightdeck Organization's Entitlements status.
      type: object
      properties:
        portals:
          description: The number of Flightdeck Portals that this Organization is entitled to.
          type: integer
        tenants:
          description: The number of Flightdeck Tenants that this Organization is entitled to
          type: integer
        tenantUsers:
          description: The number of Flightdeck Tenant Users that this Organization is entitled to
          type: integer
        connections:
          description: The number of Flightdeck Connections that this Organization is entitled to
          type: integer
      required:
        - portals
        - tenants
        - tenantUsers
        - connections
    SubscriptionInfo:
      type: object
      properties:
        status:
          type: string
        entitlements:
          $ref: '#/components/schemas/SubscriptionEntitlements'
      required:
        - status
        - entitlements
    TailscaleConnection:
      description: Represents a Tailscale Connection resource.
      allOf:
        - $ref: '#/components/schemas/ConnectionConfig'
        - $ref: '#/components/schemas/TailscaleConnectionInput'
    TailscaleConnectionInput:
      type: object
      properties:
        authToken:
          description: The Tailscale connection auth token.
          type: string
          x-oapi-codegen-extra-tags:
            tfsdk: auth_token
        hosts:
          description: The Tailscale MagicDNS hosts to make available.
          type: array
          items:
            type: string
          x-oapi-codegen-extra-tags:
            tfsdk: hosts
      required:
        - authToken
    TaskScheduleDefinitionConfig:
      x-oapi-codegen-extra-tags:
        tfsdk: '-'
      type: object
      properties:
        frequency:
          $ref: '#/components/schemas/TaskScheduleDefinitionTimeConfigFrequency'
        timeout:
          $ref: '#/components/schemas/TaskScheduleDefinitionTimeConfigTimeout'
    TaskScheduleDefinitionTimeConfigFrequency:
      x-oapi-codegen-extra-tags:
        tfsdk: frequency
      type: object
      properties:
        minutes:
          description: The number of minutes between each run of the task.
          type: integer
          default: 10
          x-oapi-codegen-extra-tags:
            tfsdk: minutes
    TaskScheduleDefinitionTimeConfigTimeout:
      x-oapi-codegen-extra-tags:
        tfsdk: timeout
      type: object
      properties:
        minutes:
          description: The number of minutes before the task times out.
          type: integer
          default: 10
          x-oapi-codegen-extra-tags:
            tfsdk: minutes
    Tenant:
      description: Represents a Tenant resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/TenantInput'
        - type: object
          properties:
            organizationId:
              description: The ID of the Flightdeck Organization.
              type: string
              format: uuid
            identifier:
              description: The internal identifier of the Tenant.
              type: string
            issuerUrl:
              description: The URL of the Tenant's OIDC Issuer.
              type: string
          required:
            - organizationId
            - identifier
            - issuerUrl
    TenantInput:
      description: Represents a Tenant resource.
      type: object
      properties:
        name:
          description: The name of the Tenant.
          type: string
          format: lowercasealpha
          minLength: 3
          maxLength: 16
        displayName:
          description: The display name of the Tenant.
          type: string
      required:
        - name
        - displayName
    TenantUser:
      description: Represents a Tenant User resource.
      allOf:
        - $ref: '#/components/schemas/BaseResourceType'
        - $ref: '#/components/schemas/TenantUserInput'
        - type: object
          properties:
            organizationId:
              description: The ID of the Flightdeck Organization.
              type: string
              format: uuid
            tenantName:
              description: The name of the Flightdeck Tenant.
              type: string
          required:
            - organizationId
            - tenantName
    TenantUserInput:
      description: Represents a Tenant User Input resource.
      type: object
      properties:
        username:
          description: The username of the Tenant User.
          type: string
          format: lowercasealpha
          minLength: 3
          maxLength: 16
        email:
          description: The email of the Tenant User.
          type: string
          format: email
      required:
        - username
        - email
    TenantUsersListResponse:
      description: Represents a list of Tenant User resources.
      type: object
      properties:
        items:
          description: The list of Tenant User resources.
          type: array
          items:
            $ref: '#/components/schemas/TenantUser'
        total:
          description: The total number of Tenant User resources.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
    TenantsListResponse:
      description: Represents a list of Tenant resources.
      type: object
      properties:
        items:
          description: The list of Tenant resources.
          type: array
          items:
            $ref: '#/components/schemas/Tenant'
        total:
          description: The total number of Tenant resources.
          type: integer
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      required:
        - item
        - total
        - pageInfo
